[build-system]
requires = ["flit_core>=3.2.0,<4"]
build-backend = "flit_core.buildapi"


[project]
name = "mdformat-gfm"
version = "0.3.7"  # DO NOT EDIT THIS LINE MANUALLY. LET bump2version UTILITY DO IT
authors = [
    { name = "Taneli Hukkinen", email = "hukkin@users.noreply.github.com"},
]
description = "Mdformat plugin for GitHub Flavored Markdown compatibility"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
dependencies = [
    'mdformat >=0.7.5,<0.8.0',
    'markdown-it-py[linkify]',  # Let `mdformat` choose version boundaries for `markdown-it-py`
    'mdit-py-plugins >=0.2.0',
    'mdformat-tables >=0.4.0',
]
classifiers = [
    "Topic :: Documentation",
    "Topic :: Text Processing :: Markup",
]
keywords = ["mdformat", "markdown", "formatter", "gfm"]

[project.urls]
"Homepage" = "https://github.com/hukkin/mdformat-gfm"

[project.entry-points."mdformat.parser_extension"]
"gfm" = "mdformat_gfm.plugin"


[tool.tox]
requires = ["tox>=4.21.1"]
env_list = ["3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.tox.env_run_base]
description = "Run tests under {base_python}"
deps = ["-r tests/requirements.txt"]
commands = [["pytest", { replace = "posargs", extend = true }]]

[tool.tox.env."git-mdformat"]
description = "Run tests against unreleased mdformat from git"
deps = [
    "-r tests/requirements.txt",
    "git+https://github.com/executablebooks/mdformat.git@master",
    "git+https://github.com/executablebooks/mdformat-tables.git@master",
]

[tool.tox.env."mypy"]
base_python = ["python3.11"]
description = "Run mypy under {base_python}"
deps = [
    "-r tests/requirements.txt",
    "mypy ==1.11.2",
]
commands = [["mypy", { replace = "posargs", default = ["."], extend = true }]]


[tool.isort]
# Force imports to be sorted by module, independent of import type
force_sort_within_sections = true
# Group first party and local folder imports together
no_lines_before = ["LOCALFOLDER"]

# Configure isort to work without access to site-packages
known_first_party = ["mdformat_gfm", "tests"]

# Settings for Black compatibility
profile = "black"


[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config"
xfail_strict = true


[tool.mypy]
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
# Disabling incremental mode is required for `warn_unused_configs = true` to work
incremental = false
disallow_untyped_defs = true
check_untyped_defs = true
strict_equality = true
implicit_reexport = false
no_implicit_optional = true
overrides = [
    { module = "tests.*", disallow_untyped_defs = false },
]
